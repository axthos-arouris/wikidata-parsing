buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}
plugins {
    id 'java'
    id 'scala'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'idea'

}

dependencies{
    compile project(':wikidata')
}

def scalaVersion= "2.12"
def scalaLibraryVersion= "2.12.6"



wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion="4.10"
}



allprojects {

    apply plugin: 'java'
    apply plugin: 'scala'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
    }



    dependencies {
        compile group: 'org.scala-lang', name: 'scala-library', version: "$scalaLibraryVersion"
        testCompile group: 'org.scalatest', name: "scalatest_$scalaVersion", version: '3.0.5'

        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

        //should be the same as the one used in spark
        compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.16'

        compile group: 'com.typesafe', name: 'config', version: '1.3.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.pegdown', name: 'pegdown', version: '1.6.0'
    }


    task spec(dependsOn: ['testClasses'], type: JavaExec) {
        main = 'org.scalatest.tools.Runner'
        args = ['-R', "build/classes/scala/test", '-o', '-h', 'build/tests/reports']
        classpath = sourceSets.test.runtimeClasspath

    }

    test.dependsOn(spec)
}

shadowJar {
    zip64 = true
}




